name: Release

on:
  workflow_dispatch:
    inputs:
      prerelease:
        type: boolean
        description: Prerelease
        required: true
        default: false

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Cache node_modules
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: node-v${{ matrix.node }}-node-modules-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Install node_modules
        run: yarn --check-files --frozen-lockfile --non-interactive

  deploy-demo:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs: setup
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: node-v${{ matrix.node }}-node-modules-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Build
        run: yarn nx build ngx-yubinbango-demo
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './dist/packages/ngx-yubinbango-demo'
      - name: Deploy to Github Pages
        id: deploy
        uses: actions/deploy-pages@v2

  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    needs: setup
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'
      - name: Whoami
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: node-v${{ matrix.node }}-node-modules-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Setup git
        run: |
          git config user.email "xyz.shotao@gmail.com"
          git config user.name "shota"
      - name: Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ github.event.inputs.prerelease != 'true' }}
        run: yarn nx affected --base=last-release --target=version
      - name: Version (Prerelease)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ github.event.inputs.prerelease == 'true' }}
        run: yarn nx affected --base=last-release --target=version --releaseAs prerelease --preid alpha
      - name: Tag last-release
        run: |
          git tag -f last-release
          git push origin last-release --force
